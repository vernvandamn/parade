{"version":3,"sources":["webpack:///./src/templates/post.jsx"],"names":["SuggestionBar","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","props","theme","colors","white","light","shadow","suggestion","PostSuggestion","name","styles","Post","_ref","data","pageContext","next","prev","post","markdownRemark","image","frontmatter","cover","childImageSharp","fluid","title","date","html","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","layouts__WEBPACK_IMPORTED_MODULE_5__","components__WEBPACK_IMPORTED_MODULE_6__","description","excerpt","pathname","path","article","input","list","tags","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","propTypes","PropTypes","shape","object","isRequired","query"],"mappings":"0MAQMA,UAAgBC,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,aAAGF,CAAH,0EAIH,SAAAG,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,MAAMC,OAJ/B,eAKH,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,OAAOC,YALzB,MAObC,EAAiBV,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,aAAGF,CAAH,CAAAW,KAAA,UAAAC,OAAA,6DAMdC,EAAO,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YACZC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,KACRC,EAAOJ,EAAKK,eACZC,EAAQF,EAAKG,YAAYC,MAAMC,gBAAgBC,MAC/CC,EAAQP,EAAKG,YAAYI,MACzBC,EAAOR,EAAKG,YAAYK,KACxBC,EAAOT,EAAKS,KAClB,OACE5B,OAAA6B,EAAA,EAAA7B,CAAC8B,EAAA,EAAD,KACE9B,OAAA6B,EAAA,EAAA7B,CAAC+B,EAAA,EAAD,CACEL,MAAOA,EACPM,YAAab,EAAKG,YAAYU,aAAeb,EAAKc,SAAW,IAC7DZ,MAAOA,EACPa,SAAUf,EAAKG,YAAYa,KAC3BC,SAAO,IAETpC,OAAA6B,EAAA,EAAA7B,CAAC+B,EAAA,EAAD,CAAQL,MAAOA,EAAOC,KAAMA,EAAMJ,MAAOF,IACzCrB,OAAA6B,EAAA,EAAA7B,CAAC8B,EAAA,EAAD,KACE9B,OAAA6B,EAAA,EAAA7B,CAAC8B,EAAA,EAAD,CAASO,MAAOT,IAChB5B,OAAA6B,EAAA,EAAA7B,CAAC+B,EAAA,EAAD,CAAWO,KAAMnB,EAAKG,YAAYiB,MAAQ,MAE5CvC,OAAA6B,EAAA,EAAA7B,CAACD,EAAD,KACEC,OAAA6B,EAAA,EAAA7B,CAACU,EAAD,KACGQ,GACClB,OAAA6B,EAAA,EAAA7B,CAACwC,EAAA,KAAD,CAAMC,GAAIvB,EAAKI,YAAYa,MAA3B,WAEEnC,OAAA6B,EAAA,EAAA7B,CAAA,UAAKkB,EAAKI,YAAYI,SAI5B1B,OAAA6B,EAAA,EAAA7B,CAACU,EAAD,KACGO,GACCjB,OAAA6B,EAAA,EAAA7B,CAACwC,EAAA,KAAD,CAAMC,GAAIxB,EAAKK,YAAYa,MAA3B,OAEEnC,OAAA6B,EAAA,EAAA7B,CAAA,UAAKiB,EAAKK,YAAYI,YASrBb,YAEfA,EAAK6B,UAAY,CACf1B,YAAa2B,IAAUC,MAAM,CAC3B1B,KAAMyB,IAAUE,OAChB5B,KAAM0B,IAAUE,SACfC,WACH/B,KAAM4B,IAAUE,OAAOC,YAGlB,IAAMC,EAAK","file":"component---src-templates-post-jsx-852fa3503cc0b453c8f4.js","sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from 'gatsby';\r\nimport styled from '@emotion/styled';\r\nimport PropTypes from 'prop-types';\r\nimport { Layout, Container, Content } from 'layouts';\r\nimport { TagsBlock, Header, SEO } from 'components';\r\nimport '../styles/prism';\r\n\r\nconst SuggestionBar = styled.div`\r\n  display: flex;\r\n  flex-wrap: nowrap;\r\n  justify-content: space-between;\r\n  background: ${props => props.theme.colors.white.light};\r\n  box-shadow: ${props => props.theme.shadow.suggestion};\r\n`;\r\nconst PostSuggestion = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 1rem 3rem 0 3rem;\r\n`;\r\n\r\nconst Post = ({ data, pageContext }) => {\r\n  const { next, prev } = pageContext;\r\n  const post = data.markdownRemark;\r\n  const image = post.frontmatter.cover.childImageSharp.fluid;\r\n  const title = post.frontmatter.title;\r\n  const date = post.frontmatter.date;\r\n  const html = post.html;\r\n  return (\r\n    <Layout>\r\n      <SEO\r\n        title={title}\r\n        description={post.frontmatter.description || post.excerpt || ' '}\r\n        image={image}\r\n        pathname={post.frontmatter.path}\r\n        article\r\n      />\r\n      <Header title={title} date={date} cover={image} />\r\n      <Container>\r\n        <Content input={html} />\r\n        <TagsBlock list={post.frontmatter.tags || []} />\r\n      </Container>\r\n      <SuggestionBar>\r\n        <PostSuggestion>\r\n          {prev && (\r\n            <Link to={prev.frontmatter.path}>\r\n              Previous\r\n              <h3>{prev.frontmatter.title}</h3>\r\n            </Link>\r\n          )}\r\n        </PostSuggestion>\r\n        <PostSuggestion>\r\n          {next && (\r\n            <Link to={next.frontmatter.path}>\r\n              Next\r\n              <h3>{next.frontmatter.title}</h3>\r\n            </Link>\r\n          )}\r\n        </PostSuggestion>\r\n      </SuggestionBar>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\nPost.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    prev: PropTypes.object,\r\n    next: PropTypes.object,\r\n  }).isRequired,\r\n  data: PropTypes.object.isRequired,\r\n};\r\n\r\nexport const query = graphql`\r\n  query($pathSlug: String!) {\r\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\r\n      html\r\n      frontmatter {\r\n        date\r\n        title\r\n        tags\r\n        cover {\r\n          childImageSharp {\r\n            fluid(\r\n              maxWidth: 1920\r\n              quality: 90\r\n              duotone: { highlight: \"#386eee\", shadow: \"#2323be\", opacity: 60 }\r\n            ) {\r\n              ...GatsbyImageSharpFluid_withWebp\r\n            }\r\n            resize(width: 1200, quality: 90) {\r\n              src\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}