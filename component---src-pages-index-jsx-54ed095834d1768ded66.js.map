{"version":3,"sources":["webpack:///./src/pages/index.jsx"],"names":["PostWrapper","Object","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","target","name","styles","Index","_ref","edges","data","allMarkdownRemark","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","layouts__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","a","title","components__WEBPACK_IMPORTED_MODULE_5__","map","_ref2","node","key","id","cover","frontmatter","childImageSharp","fluid","path","date","excerpt","propTypes","PropTypes","shape","arrayOf","string","object","isRequired","tags","array","query"],"mappings":"oNAQMA,EAAcC,OAAAC,EAAA,EAAAD,CAAA,OAAHE,OAAA,YAAGF,CAAH,CAAAG,KAAA,UAAAC,OAAA,wNAcXC,EAAQ,SAAAC,GAAc,IAClBC,EADkBD,EAAXE,KACQC,kBAAfF,MACR,OACEP,OAAAU,EAAA,EAAAV,CAACW,EAAA,EAAD,KACEX,OAAAU,EAAA,EAAAV,CAACY,EAAAC,EAAD,CAAQC,MAAO,cACfd,OAAAU,EAAA,EAAAV,CAACe,EAAA,EAAD,CAAQD,MAAM,aAAd,2BACAd,OAAAU,EAAA,EAAAV,CAACD,EAAD,KACGQ,EAAMS,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTlB,OAAAU,EAAA,EAAAV,CAACe,EAAA,EAAD,CACEI,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBX,MAAOI,EAAKI,YAAYR,MACxBY,KAAMR,EAAKI,YAAYI,KACvBC,QAAST,EAAKS,eAQXtB,YAEfA,EAAMuB,UAAY,CAChBpB,KAAMqB,IAAUC,MAAM,CACpBrB,kBAAmBoB,IAAUC,MAAM,CACjCvB,MAAOsB,IAAUE,QACfF,IAAUC,MAAM,CACdZ,KAAMW,IAAUC,MAAM,CACpBH,QAASE,IAAUG,OACnBV,YAAaO,IAAUC,MAAM,CAC3BT,MAAOQ,IAAUI,OAAOC,WACxBT,KAAMI,IAAUG,OAAOE,WACvBpB,MAAOe,IAAUG,OAAOE,WACxBR,KAAMG,IAAUG,OAAOE,WACvBC,KAAMN,IAAUO,YAGnBF,iBAMJ,IAAMG,EAAK","file":"component---src-pages-index-jsx-54ed095834d1768ded66.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport styled from '@emotion/styled';\r\nimport { Header, PostList } from 'components';\r\nimport { Layout } from 'layouts';\r\n\r\nconst PostWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  margin: 4rem 4rem 1rem 4rem;\r\n  @media (max-width: 1000px) {\r\n    margin: 4rem 2rem 1rem 2rem;\r\n  }\r\n  @media (max-width: 700px) {\r\n    margin: 4rem 1rem 1rem 1rem;\r\n  }\r\n`;\r\n\r\nconst Index = ({ data }) => {\r\n  const { edges } = data.allMarkdownRemark;\r\n  return (\r\n    <Layout>\r\n      <Helmet title={'Home Page'} />\r\n      <Header title=\"Home Page\">Gatsby Tutorial Starter</Header>\r\n      <PostWrapper>\r\n        {edges.map(({ node }) => (\r\n          <PostList\r\n            key={node.id}\r\n            cover={node.frontmatter.cover.childImageSharp.fluid}\r\n            path={node.frontmatter.path}\r\n            title={node.frontmatter.title}\r\n            date={node.frontmatter.date}\r\n            excerpt={node.excerpt}\r\n          />\r\n        ))}\r\n      </PostWrapper>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n\r\nIndex.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            excerpt: PropTypes.string,\r\n            frontmatter: PropTypes.shape({\r\n              cover: PropTypes.object.isRequired,\r\n              path: PropTypes.string.isRequired,\r\n              title: PropTypes.string.isRequired,\r\n              date: PropTypes.string.isRequired,\r\n              tags: PropTypes.array,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      sort: { order: ASC, fields: [frontmatter___date] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 75)\r\n          frontmatter {\r\n            title\r\n            path\r\n            tags\r\n            date(formatString: \"MM.DD.YYYY\")\r\n            cover {\r\n              childImageSharp {\r\n                fluid(\r\n                  maxWidth: 1000\r\n                  quality: 90\r\n                  traceSVG: { color: \"#2B2B2F\" }\r\n                ) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}