{"version":3,"sources":["webpack:///./src/pages/blog.jsx"],"names":["Blog","_ref","edges","data","allMarkdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","layouts__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","title","components__WEBPACK_IMPORTED_MODULE_4__","map","_ref2","node","key","id","cover","frontmatter","childImageSharp","fluid","path","date","tags","excerpt","propTypes","PropTypes","shape","arrayOf","string","object","isRequired","array","query"],"mappings":"2MAOMA,EAAO,SAAAC,GAAc,IACjBC,EADiBD,EAAXE,KACSC,kBAAfF,MACR,OACEG,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAAC,EAAD,CAAQC,MAAO,cACfL,OAAAC,EAAA,EAAAD,CAACM,EAAA,EAAD,CAAQD,MAAM,aAAd,2BACCR,EAAMU,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTT,OAAAC,EAAA,EAAAD,CAACM,EAAA,EAAD,CACEI,IAAKD,EAAKE,GACVC,MAAOH,EAAKI,YAAYD,MAAME,gBAAgBC,MAC9CC,KAAMP,EAAKI,YAAYG,KACvBX,MAAOI,EAAKI,YAAYR,MACxBY,KAAMR,EAAKI,YAAYI,KACvBC,KAAMT,EAAKI,YAAYK,KACvBC,QAASV,EAAKU,cAOTxB,YAEfA,EAAKyB,UAAY,CACftB,KAAMuB,IAAUC,MAAM,CACpBvB,kBAAmBsB,IAAUC,MAAM,CACjCzB,MAAOwB,IAAUE,QACfF,IAAUC,MAAM,CACdb,KAAMY,IAAUC,MAAM,CACpBH,QAASE,IAAUG,OACnBX,YAAaQ,IAAUC,MAAM,CAC3BV,MAAOS,IAAUI,OAAOC,WACxBV,KAAMK,IAAUG,OAAOE,WACvBrB,MAAOgB,IAAUG,OAAOE,WACxBT,KAAMI,IAAUG,OAAOE,WACvBR,KAAMG,IAAUM,YAGnBD,iBAMJ,IAAME,EAAK","file":"component---src-pages-blog-jsx-ea8bd8c42c977768e9fb.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Helmet from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { Header, BlogList } from 'components';\r\nimport { Layout } from 'layouts';\r\n\r\nconst Blog = ({ data }) => {\r\n  const { edges } = data.allMarkdownRemark;\r\n  return (\r\n    <Layout>\r\n      <Helmet title={'Blog Page'} />\r\n      <Header title=\"Blog Page\">Gatsby Tutorial Starter</Header>\r\n      {edges.map(({ node }) => (\r\n        <BlogList\r\n          key={node.id}\r\n          cover={node.frontmatter.cover.childImageSharp.fluid}\r\n          path={node.frontmatter.path}\r\n          title={node.frontmatter.title}\r\n          date={node.frontmatter.date}\r\n          tags={node.frontmatter.tags}\r\n          excerpt={node.excerpt}\r\n        />\r\n      ))}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n\r\nBlog.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            excerpt: PropTypes.string,\r\n            frontmatter: PropTypes.shape({\r\n              cover: PropTypes.object.isRequired,\r\n              path: PropTypes.string.isRequired,\r\n              title: PropTypes.string.isRequired,\r\n              date: PropTypes.string.isRequired,\r\n              tags: PropTypes.array,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n};\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { order: ASC, fields: [frontmatter___date] }) {\r\n      edges {\r\n        node {\r\n          id\r\n          excerpt(pruneLength: 200)\r\n          frontmatter {\r\n            title\r\n            path\r\n            tags\r\n            date(formatString: \"MM.DD.YYYY\")\r\n            cover {\r\n              childImageSharp {\r\n                fluid(\r\n                  maxWidth: 1000\r\n                  quality: 90\r\n                  traceSVG: { color: \"#2B2B2F\" }\r\n                ) {\r\n                  ...GatsbyImageSharpFluid_withWebp_tracedSVG\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}